import os

ANNOWORKDIR = os.environ["ANNOWORKDIR"]
ANNODB = os.environ['ANNODB']
ALIGNSETTING = os.environ['ALIGNSETTING']
EVALUETHRESHOLD = os.environ['EVALUETHRESHOLD']

workdir: os.path.dirname(os.path.realpath(__file__))

#remove
diamond = "/home/sth19/miniconda3/envs/ggCaller/bin/diamond"
hmmscan=  "/home/sth19/miniconda3/envs/ggCaller/bin/hmmscan"
#diamond = "diamond"
#hmmscan=  "hmmscan"

file_suffix = "_" + ALIGNSETTING + ".fasta"

nodes = [file.split("/")[-1].split("_")[0] for file in os.listdir(ANNOWORKDIR) if file_suffix in file]

rule all:
    input:
        expand(ANNOWORKDIR + "{samples}" + "_" + ALIGNSETTING + ".tsv", samples=nodes)

rule diamond:
    input:
        reference = ANNODB,
        query = ANNOWORKDIR + "{samples}_d.fasta"
    output:
        ANNOWORKDIR + "{samples}_d.tsv"
    shell:
        diamond + " blastp --iterate --evalue " + EVALUETHRESHOLD + " -d {input.reference} -q {input.query} -o {output}"

rule hmmscan:
    input:
        reference = ANNODB,
        query = ANNOWORKDIR + "{samples}_h.fasta"
    output:
        ANNOWORKDIR + "{samples}_h.tsv"
    shell:
        hmmscan + " -E " + EVALUETHRESHOLD +  " --tblout {output} {input.reference} {input.query}"